"""Telegram Web‚ÄëApp bot
~~~~~~~~~~~~~~~~~~~~~~~
‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–∑ –≤–µ–±‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (tg.sendData)
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF –Ω–∞ –æ—Å–Ω–æ–≤–µ template.pdf
‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç PDF –Ω–∞ –ø–æ—á—Ç—É (–Ω–µ –±–ª–æ–∫–∏—Ä—É—è event‚Äëloop)
‚Ä¢ –û—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—Ö–µ / –æ—à–∏–±–∫–µ

–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ config.py  (–Ω–µ –∫–æ–º–º–∏—Ç–∏—Ç—å!)
-------------------------------------------------------------------
config.py –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
    BOT_TOKEN = "123456:ABC‚Ä¶"          # —Ç–æ–∫–µ–Ω @BotFather
    WEBAPP_URL = "https://‚Ä¶/index.html" # URL —Ñ–æ—Ä–º—ã, –æ—Ç–∫—Ä—ã–≤–∞–µ–º–æ–π –∫–Ω–æ–ø–∫–æ–π
    ALLOWED_USER_IDS = {111, 222, ‚Ä¶}    # ID, –∫–æ–º—É –¥–æ—Å—Ç—É–ø–µ–Ω –±–æ—Ç
    SMTP_HOST = "smtp.example.com"
    SMTP_PORT = 465
    SMTP_LOGIN = "bot@example.com"
    SMTP_PASSWORD = "‚Ä¶"
    EMAIL_TO = ["manager@example.com"]
-------------------------------------------------------------------
Required packages (pip):
    python-telegram-bot >= 22.0  (PTB 22+)
    httpx  (—Å—Ç–∞–≤–∏—Ç—Å—è –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å)
    pdfrw   (–¥–ª—è fill_pdf.py)
"""
from __future__ import annotations

import os
import json
import asyncio
import logging
from datetime import datetime
from logging.handlers import RotatingFileHandler

from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

from config import BOT_TOKEN, WEBAPP_URL, ALLOWED_USER_IDS
from fill_pdf import fill_pdf          # –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
from email_sender import send_email    # –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –õ–û–ì–ò ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
LOG_FORMAT = "% (asctime)s | %(levelname)-8s | %(name)s | %(message)s"
LOG_FILE = "bot.log"

root = logging.getLogger()
root.setLevel(logging.INFO)            # –±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å (–∫–æ–Ω—Å–æ–ª—å)

# –§–∞–π–ª‚Äë—Ö–µ–Ω–¥–ª–µ—Ä —Å DEBUG + —Ä–æ—Ç–∞—Ü–∏—è (10 √ó 1‚ÄØ–ú–ë)
file_h = RotatingFileHandler(LOG_FILE, maxBytes=1_000_000, backupCount=10, encoding="utf-8")
file_h.setFormatter(logging.Formatter(LOG_FORMAT))
file_h.setLevel(logging.DEBUG)
root.addHandler(file_h)

console_h = logging.StreamHandler()
console_h.setFormatter(logging.Formatter(LOG_FORMAT))
console_h.setLevel(logging.INFO)
root.addHandler(console_h)

# –ü—Ä–∏–≥–ª—É—à–∞–µ–º ¬´–±–æ–ª—Ç–ª–∏–≤—ã–µ¬ª –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("telegram.ext").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –•–ï–ù–î–õ–ï–†–´ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/start ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web‚ÄëApp"""
    user_id = update.effective_user.id
    if user_id not in ALLOWED_USER_IDS:
        await update.message.reply_text("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ñ–æ—Ä–º—ã.")
        logger.warning("[ACCESS DENIED] User %s –Ω–µ –≤ ALLOWED_USER_IDS", user_id)
        return

    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", web_app={"url": WEBAPP_URL})]
    ])
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É:",
        reply_markup=keyboard,
    )
    logger.debug("–ö–Ω–æ–ø–∫–∞ Web‚ÄëApp –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s", user_id)


async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ"""

    # —Ñ–∏–ª—å—Ç—Ä —É–∂–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ web_app_data –µ—Å—Ç—å ‚Üí –ø—Ä–æ—Å—Ç–æ –±–µ—Ä—ë–º
    raw: str = update.message.web_app_data.data  # type: ignore[assignment]
    logger.debug("RAW DATA: %s", raw)

    try:
        data: dict = json.loads(raw)
    except json.JSONDecodeError as exc:
        logger.error("–ù–µ–≤–µ—Ä–Ω—ã–π JSON: %s", exc)
        await update.effective_chat.send_message("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã.")
        return

    try:
        # –ü—É—Ç—å –¥–ª—è PDF
        os.makedirs("output", exist_ok=True)
        stamp = datetime.now().strftime("%Y%m%d%H%M%S")
        pdf_path = f"output/form_{update.effective_user.id}_{stamp}.pdf"

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
        fill_pdf("template.pdf", pdf_path, data)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ –≤ –ø—É–ª–µ –ø–æ—Ç–æ–∫–æ–≤ (—á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å asyncio)
        subject = f"–ó–∞—è–≤–∫–∞ –æ—Ç {data.get('person', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
        body = "–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —á–µ—Ä–µ–∑ Telegram‚Äë–±–æ—Ç."
        await asyncio.to_thread(send_email, subject, body, pdf_path)

        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.effective_chat.send_message("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        logger.info("–ó–∞—è–≤–∫–∞ %s –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞", pdf_path)

    except Exception as exc:
        logger.exception("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: %s", exc)
        await update.effective_chat.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.")


async def dump(update: Update, _: ContextTypes.DEFAULT_TYPE) -> None:
    """DEBUG: –≤—ã–≤–æ–¥–∏—Ç —Å—ã—Ä—ã–µ –∞–ø–¥–µ–π—Ç—ã –Ω–∞ —É—Ä–æ–≤–µ–Ω—å DEBUG"""
    logger.debug("UPDATE: %s", update)


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è"""
    logger.exception("Exception while handling update %s", update, exc_info=context.error)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ main() ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def main() -> None:
    application = Application.builder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))
    # ‚Üì —É–±–µ—Ä–∏—Ç–µ, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω –¥–∞–º–ø
    application.add_handler(MessageHandler(filters.ALL, dump))

    application.add_error_handler(error_handler)

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    application.run_polling()


if __name__ == "__main__":
    main()









 
